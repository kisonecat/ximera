/* Change this value to change the saturation and lightness of the background colors of the theorem environments. 
The colors that you type below in theoremEnvironments will all get standardized to have the same saturation and lightness. */
$theoremEnvironmentSaturation: 25%;
$theoremEnvironmentLightness: 90%;

$color-grass: #11FF55;
$color-sky: #0000FF;
$color-sun: #FFFF00;
$color-blood: #AA0000;

/*"Array" of names and colors to select from.
Be careful that every environment has a color, 
and don't ever choose white, gray, or black, since the "saturation"
and "hue" of white and black don't behave well. */
$theoremEnvironments:
theorem $color-grass theorie,
axiom $color-grass axioma,
conjecture $color-grass vermoeden,
corollary $color-grass gevolgtrekking,
proposition $color-grass eigenschap,
lemma $color-grass lemma,
claim $color-grass bewering,
condition $color-grass voorwaarde,
idea $color-grass idee,
definition $color-grass definitie,
conclusion $color-grass conclusie,
summary $color-grass samenvatting,
warning $color-blood waarschuwing,
paradox $color-blood paradox,
example $color-sun voorbeeld,
observation $color-sun observatie,
fact $color-sun feit,
remark $color-sun opmerking,
algorithm $color-sun algoritme,
notation $color-sun notatie,
criterion $color-sun criterium,
exercise $color-sky oefening,
problem $color-sky probleem,
question $color-sky '',
explanation $color-grass uitleg,
exploration $color-sky exploratie,
model $color-sky model,
formula $color-sky formule,
procedure $color-sky procedure,
template $color-sky template;

/* This is a faux loop that doesn't end up in the final css. 
Writing this does not actually cause the loop to be executed; see below
for that. @index is the counter variable, but .loop is not a keyword!
We want to stop when the index reaches the end of the list of environments. */

@for $index from 1 through length($theoremEnvironments) {

   /* theoremEnvironments above is a list of lists. Get the correct list: */
   $thisTheoremEnvironment: nth($theoremEnvironments, $index);

   /*Nth from the list the name and color of the class*/
   $nameOfClass: nth($thisTheoremEnvironment, 1);
   $colorOfClass: nth($thisTheoremEnvironment, 2);
   $titleOfClass: nth($thisTheoremEnvironment, 3);
   
   .#{$nameOfClass} {
       @extend .w-100;
       background-color: #FDFDFD;
       /* Take the color of the class, saturate it to a fixed value, and lighten it to a fixed value (see top of file) */
       //background-color: hsl(hue($colorOfClass),$theoremEnvironmentSaturation,$theoremEnvironmentLightness);

      border: 1px solid hsl(hue($colorOfClass),$theoremEnvironmentSaturation,$theoremEnvironmentLightness);      
      border-left: 12px solid hsl(hue($colorOfClass),$theoremEnvironmentSaturation,$theoremEnvironmentLightness);      
      
      /*These are the things that are common to all environments. */
      padding-left: 12px;
      padding-right: 24px;
      
      margin-top: 12pt;

      padding-top: 6pt;
      padding-bottom: 12pt;


   }

   /* Various things get floated inside problem environments, and we don't want floats to float outside their containers */
   .#{$nameOfClass}::after {
       content: "."; 
       visibility: hidden; 
       display: block; 
       height: 0; 
       clear: both;
   }
   
   .#{$nameOfClass}::before {
      content:"#{$titleOfClass}" attr(numbered) ".";
      display: inline;
      text-transform: capitalize;   /* CSS here only applies to one word, like "Theorem." or "Example." */
      font-weight: bold;
      padding-right: 0.5em;
      font-family:  -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
   }
   
   .#{$nameOfClass} ul{
       padding-left: 1em;
   }
}


.explanation::before
{
  content:"Uitleg.";
}

/****************************************************************/
/* \begin{theorem}[title] will put title inside a span.theorem-like-title */

.theorem-like-title {
    opacity: 0.75;
    padding-right: 0.5em;
}

.theorem-like-title::before {
    content: "(";
}

.theorem-like-title::after {
    content: ")";
}

