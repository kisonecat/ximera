{"version":3,"names":[],"mappings":"","sources":["sw.min.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({\"/usr/var/server/dbm.json\":[function(require,module,exports){\nmodule.exports={\n    \"name\": \"ximera-server-standalone\",\n    \"version\": \"2.3.7i\"\n}\n\n},{}],\"/usr/var/server/public/javascripts/sw.js\":[function(require,module,exports){\n\"use strict\";\n\nvar version = require(\"../../dbm.json\").version;\nvar mathjaxRoot = window.toValidPath(\"/node_modules/mathjax\");\n\nvar cacheUrls = [window.toValidPath(\"/public/v\" + version + \"/javascripts/main.min.js\"), window.toValidPath(\"/public/v\" + version + \"/stylesheets/base.css\"), window.toValidPath(\"/public/v\" + version + \"/images/logo/logo.svg\"), window.toValidPath(\"/public/v\" + version + \"/images/osu/osu-web-footer-wordmark-rev.png\"), window.toValidPath(\"/public/json/symbols.json\"), window.toValidPath(\"/node_modules/guppy-dev/build/guppy-default.min.css\"), mathjaxRoot + \"/jax/input/TeX/jax.js\", mathjaxRoot + \"/jax/element/mml/jax.js\", mathjaxRoot + \"/jax/output/HTML-CSS/jax.js\", mathjaxRoot + \"/jax/output/HTML-CSS/fonts/TeX/fontdata.js\", mathjaxRoot + \"/extensions/TeX/AMSmath.js\", mathjaxRoot + \"/extensions/MathEvents.js\", mathjaxRoot + \"/extensions/TeX/AMSsymbols.js\", mathjaxRoot + \"/extensions/TeX/noErrors.js\", mathjaxRoot + \"/extensions/TeX/noUndefined.js\", mathjaxRoot + \"/extensions/TeX/color.js\", mathjaxRoot + \"/extensions/TeX/cancel.js\", mathjaxRoot + \"/extensions/toMathML.js\", mathjaxRoot + \"/extensions/AssistiveMML.js\", mathjaxRoot + \"/extensions/MathMenu.js\", mathjaxRoot + \"/extensions/MathZoom.js\", mathjaxRoot + \"/extensions/a11y/accessibility-menu.js\"];\n\n//GET /node_modules/mathjax//jax/input/TeX/config.js?V=2.7.3 200 8.363 ms - 1268\n//GET /node_modules/mathjax//extensions/tex2jax.js?V=2.7.3 200 5.973 ms - 6959\n//GET /node_modules/mathjax//jax/output/HTML-CSS/config.js?V=2.7.3 200 8.134 ms - 3570\n//GET /node_modules/mathjax//extensions/fast-preview.js?V=2.7.3 200 5.903 ms - 3177\n//GET /node_modules/mathjax//extensions/CHTML-preview.js?V=2.7.3 200 5.184 ms - 829\n\nself.addEventListener(\"install\", function (event) {\n  event.waitUntil(caches.open(version).then(function (cache) {\n    return cache.addAll(cacheUrls);\n  }));\n});\n\nself.addEventListener(\"activate\", function (event) {\n  event.waitUntil(caches.keys().then(function (cacheNames) {\n    return Promise.all(cacheNames.filter(function (cacheName) {\n      return cacheName != version;\n    }).map(function (cacheName) {\n      return caches.delete(cacheName);\n    }));\n  }));\n});\n\n// cache woff\nself.addEventListener(\"fetch\", function (event) {\n  // Eliminate query strings from mathjax requests\n  if (event.request.url.startsWith(mathjaxRoot)) {\n    var requestClone = event.request.clone();\n\n    var normalizedUrl = new URL(event.request.url);\n    normalizedUrl.search = \"\";\n\n    return event.respondWith(caches.match(normalizedUrl).then(function (response) {\n      console.log(\"Found!\", response);\n      if (response !== undefined) {\n        return response;\n      } else {\n        return fetch(event.request);\n      }\n    }));\n  }\n\n  event.respondWith(caches.open(version).then(function (cache) {\n    return cache.match(event.request).then(function (response) {\n      // caches.match() always resolves\n      // but in case of success response will have value\n      if (response !== undefined) {\n        return response;\n      } else {\n        return fetch(event.request);\n      }\n    });\n  }));\n\n  return;\n\n  event.respondWith(caches.match(event.request).then(function (response) {\n    // caches.match() always resolves\n    // but in case of success response will have value\n    if (response !== undefined) {\n      return response;\n    } else {\n      return fetch(event.request).then(function (response) {\n        // response may be used only once\n        // we need to save clone to put one copy in cache\n        // and serve second one\n        var responseClone = response.clone();\n\n        caches.open(version).then(function (cache) {\n          cache.put(event.request, responseClone);\n        });\n        return response;\n      }).catch(function () {\n        return caches.match(\"/sw-test/gallery/myLittleVader.jpg\");\n      });\n    }\n  }));\n});\n\n},{\"../../dbm.json\":\"/usr/var/server/dbm.json\"}]},{},[\"/usr/var/server/public/javascripts/sw.js\"]);\n"],"file":"sw.min.js","sourceRoot":"/source/"}